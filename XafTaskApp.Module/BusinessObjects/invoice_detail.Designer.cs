//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Xpo.Metadata;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
using System.Reflection;
using DevExpress.Persistent.Validation;
namespace XafTaskApp.Module.BusinessObjects
{
    public partial class invoice_detail : XPLiteObject
    {
        int finvoice_detail_id;
        [System.ComponentModel.DisplayName("Invoice Detail ID")]
        [Key(true)]
        public int invoice_detail_id
        {
            get { return finvoice_detail_id; }
            set { SetPropertyValue<int>(nameof(invoice_detail_id), ref finvoice_detail_id, value); }
        }
        invoice finvoice_id;
        [System.ComponentModel.DisplayName("Invoice")]
        [Association(@"invoice_detailReferencesinvoice")]
        [RuleRequiredField("InvoiceDetailInvoiceRequired", DefaultContexts.Save, "Invoice is required.")] // Required field
        public invoice invoice_id
        {
            get { return finvoice_id; }
            set { SetPropertyValue<invoice>(nameof(invoice_id), ref finvoice_id, value); }
        }
        product fproduct_id;
        [System.ComponentModel.DisplayName("Product")]
        [Association(@"invoice_detailReferencesproduct")]
        [RuleRequiredField("InvoiceDetailProductRequired", DefaultContexts.Save, "Product is required.")] // Required field
        public product product_id
        {
            get { return fproduct_id; }
            set { SetPropertyValue<product>(nameof(product_id), ref fproduct_id, value); }
        }
        double fqun;
        [System.ComponentModel.DisplayName("Quantity")]
        [RuleRange("QuantityRange", DefaultContexts.Save, 1, 1000, CustomMessageTemplate = "Quantity must be between 1 and 1000.")] // Range validation
        public double qun
        {
            get { return fqun; }
            set { SetPropertyValue<double>(nameof(qun), ref fqun, value); }
        }
        double funit_price;
        [System.ComponentModel.DisplayName("Unit Price")]
        [RuleRange("UnitPriceRange", DefaultContexts.Save, 0.01, 10000, CustomMessageTemplate = "Unit Price must be between 0.01 and 10000.")] // Range validation
        public double unit_price
        {
            get { return funit_price; }
            set { SetPropertyValue<double>(nameof(unit_price), ref funit_price, value); }
        }
        double ftotal;
        [System.ComponentModel.DisplayName("Total")]
        public double total
        {
            get { return ftotal; }
            set { SetPropertyValue<double>(nameof(total), ref ftotal, value); }
        }
    }

}
