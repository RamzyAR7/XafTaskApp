//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Xpo.Metadata;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
using System.Reflection;
using DevExpress.Persistent.Validation;
namespace XafTaskApp.Module.BusinessObjects
{
    public partial class payment : XPLiteObject
    {
        int fpayment_id;
        [Key(true)]
        public int payment_id
        {
            get { return fpayment_id; }
            set { SetPropertyValue<int>(nameof(payment_id), ref fpayment_id, value); }
        }
        DateTime fpayment_date;
        [RuleRequiredField("PaymentDateRequired", DefaultContexts.Save, "Payment Date is required.")] // Required field
        public DateTime payment_date
        {
            get { return fpayment_date; }
            set { SetPropertyValue<DateTime>(nameof(payment_date), ref fpayment_date, value); }
        }
        double fpayment_amount;
        [RuleRange("PaymentAmountRange", DefaultContexts.Save, 0.01, 1000000, CustomMessageTemplate = "Payment Amount must be between 0.01 and 1000000.")] // Range validation
        public double payment_amount
        {
            get { return fpayment_amount; }
            set { SetPropertyValue<double>(nameof(payment_amount), ref fpayment_amount, value); }
        }
        invoice finvoice_id;
        [Association(@"paymentReferencesinvoice")]
        [RuleRequiredField("PaymentInvoiceRequired", DefaultContexts.Save, "Invoice is required.")] // Required field
        public invoice invoice_id
        {
            get { return finvoice_id; }
            set { SetPropertyValue<invoice>(nameof(invoice_id), ref finvoice_id, value); }
        }
        customer fcustomer_id;
        [Association(@"paymentReferencescustomer")]
        [RuleRequiredField("PaymentCustomerRequired", DefaultContexts.Save, "Customer is required.")] // Required field
        public customer customer_id
        {
            get { return fcustomer_id; }
            set { SetPropertyValue<customer>(nameof(customer_id), ref fcustomer_id, value); }
        }
    }

}
