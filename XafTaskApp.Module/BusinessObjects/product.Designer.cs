//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Xpo.Metadata;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
using System.Reflection;
using DevExpress.Persistent.Validation;
namespace XafTaskApp.Module.BusinessObjects
{
    public partial class product : XPLiteObject
    {
        int fproduct_id;
        [System.ComponentModel.DisplayName("Product ID")]
        [Key(true)]
        public int product_id
        {
            get { return fproduct_id; }
            set { SetPropertyValue<int>(nameof(product_id), ref fproduct_id, value); }
        }
        string fproduct_name;
        [System.ComponentModel.DisplayName("Product Name")]
        [Size(150)]
        [RuleUniqueValue("RuleUniqueValue for product.product_name", DefaultContexts.Save, "Product name must be unique.")]
        [RuleRequiredField("ProductNameRequired", DefaultContexts.Save, "Product Name is required.")] // Required field
        public string product_name
        {
            get { return fproduct_name; }
            set { SetPropertyValue<string>(nameof(product_name), ref fproduct_name, value); }
        }
        string fproduct_desc;
        [System.ComponentModel.DisplayName("Product Description")]
        [Size(500)]
        public string product_desc
        {
            get { return fproduct_desc; }
            set { SetPropertyValue<string>(nameof(product_desc), ref fproduct_desc, value); }
        }
        double fproduct_price;
        [System.ComponentModel.DisplayName("Product Price")]
        [RuleRange("ProductPriceRange", DefaultContexts.Save, 0.01, 10000, CustomMessageTemplate = "Product Price must be between 0.01 and 10000.")] // Range validation
        public double product_price
        {
            get { return fproduct_price; }
            set { SetPropertyValue<double>(nameof(product_price), ref fproduct_price, value); }
        }
        double fsales_price;
        [System.ComponentModel.DisplayName("Sales Price 1")]
        [RuleRange("SalesPrice1Range", DefaultContexts.Save, 0.01, 10000, CustomMessageTemplate = "Sales Price 1 must be between 0.01 and 10000.")] // Range validation
        public double sales_price
        {
            get { return fsales_price; }
            set { SetPropertyValue<double>(nameof(sales_price), ref fsales_price, value); }
        }
        double fsales_price2;
        [System.ComponentModel.DisplayName("Sales Price 2")]
        [RuleRange("SalesPrice2Range", DefaultContexts.Save, 0.01, 10000, CustomMessageTemplate = "Sales Price 2 must be between 0.01 and 10000.")] // Range validation
        public double sales_price2
        {
            get { return fsales_price2; }
            set { SetPropertyValue<double>(nameof(sales_price2), ref fsales_price2, value); }
        }
        double fsales_price3;
        [System.ComponentModel.DisplayName("Sales Price 3")]
        [RuleRange("SalesPrice3Range", DefaultContexts.Save, 0.01, 10000, CustomMessageTemplate = "Sales Price 3 must be between 0.01 and 10000.")] // Range validation
        public double sales_price3
        {
            get { return fsales_price3; }
            set { SetPropertyValue<double>(nameof(sales_price3), ref fsales_price3, value); }
        }
        [Association(@"invoice_detailReferencesproduct")]
        public XPCollection<invoice_detail> invoice_details { get { return GetCollection<invoice_detail>(nameof(invoice_details)); } }
    }
}
